using TextGrid, DelimitedFiles

"""
insert() - Insert transcription generated by speech-to-text software/services into a TextGrid file.

Inputs:
TextGridFile - Full path to the TextGrid file to insert the transcription
               annotaion as a new item. a new file will be saved to the
               same location with annotation (original file doesn't change)

transcription - The text file generated by speech-to-text tool containing
                the words and corresponding "offset" and "duration" for each word.
                File must be in the following format:
                "SpeakerInterval#" "#ofWordsInTheInterval"
                "word" "offset" "duration"
                "word" "offset" "duration"
                "word" "offset" "duration"
                        .
                        .
                        .

speakerOrder - The speaker (1 or 2) corresponding to the transcription.

item - The number corresponding to the "item [#]" line in the TextGrid file.

Output:
is the tartget TextGrid file to include the transcription on as an "IntervalTier" interval.

Note: the "size = #" line need to be changed when a new item is inserted
      (i.e. increase by 1 for each new item)

# Examples
```@example
using TextGrid
TextGridFile = raw"Path\\Example.TextGrid"
transcription = raw"Path\\transcription.txt"
# insert transcription into TextGridFile for speaker #1 at item #10
insertWords(TextGridFile, transcription, 1, 10)
```

"""
function insertTranscription(TextGridFile, transcription, speakerOrder, item)
    # save new TextGrid file in TextGridFile's location
    output = TextGridFile[begin:findlast(".", TextGridFile)[1]-1]*"S$speakerOrder"*"_copy.TextGrid"
    interval = extract(TextGridFile)
    S_info = speaker(interval,speakerOrder)
    words = readdlm(transcription)

    # set item info
    class = "IntervalTier"
    name = "Words S"*string(speakerOrder)
    size1 = size(words)[1] - length(S_info)
    xmin = round(S_info[1][1], digits=3)
    xmax = round(S_info[end][2], digits=3)

    # open transcription to read
    f = open(transcription, "r")

    open(output, "a") do file
        # add annotaiton information
        write(file, " "^4*"item ["*string(item)*"]:\n")
        write(file, " "^8*"class = \""*class*"\" \n")
        write(file, " "^8*"name = \""*name*"\" \n")
        write(file, " "^8*"xmin = "*string(xmin)*" \n")
        write(file, " "^8*"xmax = "*string(xmax)*" \n")
        write(file, " "^8*"intervals: size = "*string(size1)*" \n")
        count = 0
        for n in 1:length(S_info) # each speaker segment
            S = parse.(Int64,split(readline(f)))

            for i in 1:S[2] # each word, insert info to TextGrid file
                count += 1
                line = split(readline(f))

                write(file, " "^8*"intervals ["*string(count)*"]:\n") #interval[""]

                temp = round(S_info[n][1]+parse(Float64,line[2])/10^7, digits=3)+0.1
                write(file, " "^12*"xmin = "*string(temp)*" \n") #xmin = ""

                temp = round(S_info[n][1]+(parse(Float64,line[2])+parse(Float64,line[3]))/10^7, digits=3)+0.1
                write(file, " "^12*"xmax = "*string(temp)*" \n") #xmax = ""

                write(file, " "^12*"text = \""*string(line[1])*"\" \n") #text = ""
            end
        end
    end

    return nothing
end
